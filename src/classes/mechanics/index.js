import serialise from 'serialijse';

import BonusMechanic from './BonusMechanic';
import ContainerMechanic from './ContainerMechanic';
import CoreMechanic from './CoreMechanic';
import CostMechanic from './CostMechanic';
import LocationMechanic from './LocationMechanic';
import PowerBonusMechanic from './PowerBonusMechanic';
import ProjectExpiryMechanic from './ProjectExpiryMechanic';
import ProjectGlobalStatCardNum from './ProjectGlobalStatCardNum';
import ProjectGlobalStatPercentBoost from './ProjectGlobalStatPercentBoost';
import ProjectPerCompletionFpbBoost from './ProjectPerCompletionFpbBoost';
import TimeReduceMechanic from './TimeReduceMechanic';
import Unique from './Unique';
import Card2ProjectStatBonus from './Card2ProjectStatBonus';
import CardLocationStatPercentBonus from './CardLocationStatPercentBonus';
import MatcherMechanic from './MatcherMechanic';
import ProjectPerCompletionAllTypeCardStatPercentBoost from './ProjectPerCompletionAllTypeCardStatPercentBoost';
import StatForUnspentLocationVal from './StatForUnspentLocationVal';
import DynamicMatcherMechanic from './DynamicMatcherMechanic';
import CardNumStatMultiplier from './CardNumStatMultiplier';
import ProjectPerCompletionXpbBoost from './ProjectPerCompletionXpbBoost';
import EventMechanic from './EventMechanic';
import BonusEventMechanic from './BonusEventMechanic';
import UpgradeMechanic from './UpgradeMechanic';

serialise.declarePersistable(BonusMechanic);
serialise.declarePersistable(ContainerMechanic);
serialise.declarePersistable(CoreMechanic);
serialise.declarePersistable(CostMechanic);
serialise.declarePersistable(LocationMechanic);
serialise.declarePersistable(PowerBonusMechanic);
serialise.declarePersistable(ProjectExpiryMechanic);
serialise.declarePersistable(ProjectGlobalStatCardNum);
serialise.declarePersistable(ProjectGlobalStatPercentBoost);
serialise.declarePersistable(ProjectPerCompletionFpbBoost);
serialise.declarePersistable(TimeReduceMechanic);
serialise.declarePersistable(Unique);
serialise.declarePersistable(Card2ProjectStatBonus);
serialise.declarePersistable(CardLocationStatPercentBonus);
serialise.declarePersistable(MatcherMechanic);
serialise.declarePersistable(ProjectPerCompletionAllTypeCardStatPercentBoost);
serialise.declarePersistable(StatForUnspentLocationVal);
serialise.declarePersistable(CardNumStatMultiplier);
serialise.declarePersistable(DynamicMatcherMechanic);
serialise.declarePersistable(ProjectPerCompletionXpbBoost);
serialise.declarePersistable(EventMechanic);
serialise.declarePersistable(BonusEventMechanic);
serialise.declarePersistable(UpgradeMechanic);
